#!/bin/bash

# Exibe o diret√≥rio atual onde o commit ser√° feito
echo ""
echo "üìÅ Commitando em: $(pwd)"
echo ""

# Solicita a mensagem do commit ao usu√°rio
# A mensagem come√ßar√° automaticamente com "Aula: "
read -p "Digite a mensagem: " mensagem_adicional

# Verifica se a mensagem adicional n√£o est√° vazia
if [ -z "$mensagem_adicional" ]; then
    echo "‚ùå A mensagem do commit n√£o pode estar vazia."
    exit 1
fi

# Constr√≥i a mensagem completa do commit
mensagem_completa="Aula: $mensagem_adicional"

# Exibe a mensagem que ser√° usada para o commit
echo ""
echo "üöÄ Comitando com a mensagem: \"$mensagem_completa\""
echo ""

# Adiciona todos os arquivos modificados/novos ao stage
git add .

# Realiza o commit com a mensagem completa
# O '|| {' √© para capturar erros do comando git commit
git commit -m "$mensagem_completa" || {
    echo "‚ùå Erro ao tentar commitar. Verifique se h√° valida√ß√µes ou hooks ativos."
    exit 1 # Sai do script com c√≥digo de erro se o commit falhar
}

# Faz o push para o reposit√≥rio remoto
# O '&&' garante que o push s√≥ ser√° tentado se o commit for bem-sucedido
git push && echo "‚úÖ Push feito com sucesso!" || {
    echo "‚ùå Erro ao tentar fazer o push. Verifique sua conex√£o ou permiss√µes."
    exit 1 # Sai do script com c√≥digo de erro se o push falhar
}

echo "" # Adiciona uma linha vazia no final para melhor legibilidade
